Option Explicit

Public Sub Convert_QFX_File_To_XML()

Dim s As String
Dim sFileName As String
sFileName = "C:\Users\theda\OneDrive\Documents\Dan\Stmt_07_05_2016_01_05_2018.OFX"
With Application.FileDialog(msoFileDialogFilePicker)
        'Makes sure the user can select only one file
        .AllowMultiSelect = False
        'Filter to just the following types of files to narrow down selection options
        .Filters.Add "Open Financial Exchange (OFX) files", "*.ofx", 1
        'Show the dialog box
        .Show
        
        'Store in fullpath variable
        sFileName = .SelectedItems.Item(1)
    End With
    
    'It's a good idea to still check if the file type selected is accurate.
    'Quit the procedure if the user didn't select the type of file we need.
    If Not InStr(sFileName, ".xls") = 0 Then
        Exit Sub
    End If
 
Dim strFileContent As String, strNewContent As String
Dim iFile As Integer: iFile = FreeFile
Open sFileName For Input As #iFile
strFileContent = Trim(Input(LOF(iFile), iFile))
Close #iFile

Dim sTokens(10000) As String, sEndTokens(10000) As String
Dim lTokenArrayIndex As Long, lEndTokenArrayIndex As Long
Dim l As Long, lStartToken As Long, lEndToken As Long, lNextStartToken As Long, lEndTokenEnd As Long
Dim c As String, c2 As String
Dim sToken As String, sTokenEnd As String
lTokenArrayIndex = 1
lEndTokenArrayIndex = 1
l = 1
strNewContent = ""
While l < Len(strFileContent)
    c = Mid(strFileContent, l, 1)
    lStartToken = InStr(l, strFileContent, "<")
    lEndToken = InStr(lStartToken, strFileContent, ">")
    sToken = Mid(strFileContent, lStartToken, lEndToken - lStartToken + 1)
    sTokenEnd = "</" + Mid(sToken, 2, lEndToken - lStartToken + 1)
    strNewContent = strNewContent + sToken
    
    c = Mid(strFileContent, lEndToken + 1, 1)
    If Len(strFileContent) > lEndToken Then
        If c <> Chr(13) Then
            If c <> "<" Then
                lNextStartToken = InStr(lEndToken + 1, strFileContent, "<")
                strNewContent = strNewContent + Mid(strFileContent, lEndToken + 1, lNextStartToken - 1 - lEndToken) + sTokenEnd
            Else
                c2 = Mid(strFileContent, lEndToken + 2, 1)
                If c2 <> "/" Then
                    sTokens(lTokenArrayIndex) = sToken
                    lTokenArrayIndex = lTokenArrayIndex + 1
                    sEndTokens(lEndTokenArrayIndex) = sTokenEnd
                    lEndTokenArrayIndex = lEndTokenArrayIndex + 1
                Else
                    lTokenArrayIndex = lTokenArrayIndex - 1
                    sTokens(lTokenArrayIndex) = ""
                    strNewContent = strNewContent + sEndTokens(lEndTokenArrayIndex)
                    lEndTokenArrayIndex = lEndTokenArrayIndex - 1
                    sEndTokens(lEndTokenArrayIndex) = ""
                    lEndTokenEnd = InStr(lEndToken, strFileContent, ">")
                    l = lEndTokenEnd - 1
                End If
            End If
        Else
            GoTo Done
        End If
    End If
    
    l = lEndToken + 1
Wend
Done:
Dim iFileOut As Integer: iFileOut = FreeFile
sFileName = Replace(sFileName, ".OFX", ".xml")
Open sFileName For Output As #iFileOut
Print #iFileOut, "<?xml version=" & Chr(34) & "1.0" & Chr(34) & " encoding=" & Chr(34) & "ISO8859-1" & Chr(34) & " ?>" + strNewContent
Close #iFileOut

Dim newwb As Workbook
Set newwb = Application.Workbooks.Open(sFileName)

End Sub
